RUNNING NOFIB TESTS 
TEST: DigitsOfE1 
Solving (\forall DigitsOfE1.ratTrans.1, [#7 {_} {_} {_} {_} {_} {_} {:} | #7 {True} {_} {_} {_} {_} {_} {_}])
Result \forall main, [_]
Solving (\forall DigitsOfE1.toDigits, [:])
Result \forall main, [_]
Solving (\forall Primitive.divZero, [#2 {_} {Neg+One+Pos}])
Result \forall main, []
Final: \forall main, []
 
TEST: DigitsOfE1_Safe 
Solving (\forall DigitsOfE1_Safe.ratTrans.1, [#7 {_} {_} {_} {_} {_} {_} {:} | #7 {True} {_} {_} {_} {_} {_} {_}])
Result \forall main, [_]
Solving (\forall DigitsOfE1_Safe.toDigits, [:])
Result \forall main, [_]
Solving (\forall Primitive.divZero, [#2 {_} {Neg+One+Pos}])
Result \forall main, [_]
Final: \forall main, [_]
 
TEST: DigitsOfE2 
Solving (\forall DigitsOfE2._LAMBDA343_1_1.1, [:])
Result \forall main, [_]
Solving (\forall DigitsOfE2.carryPropagate_1, [#2 {_} {:}])
Result \forall main, [_]
Solving (\forall Prelude.head, [:])
Result \forall main, [_]
Solving (\forall Prelude.tail, [:])
Result \forall main, [_]
Solving (\forall Primitive.divZero, [#2 {_} {Neg+One+Pos}])
Result \forall main, [_]
Final: \forall main, [_]
 
TEST: Exp3_8 
No pattern match errors, trivially safe
Final: \forall main, [_]
 
TEST: Gen_Regexps 
Solving (\forall Gen_Regexps._LAMBDA534.1, [(,) {_} {:}])
Result \forall main, []
Solving (\forall Gen_Regexps._LAMBDA539.1, [(,) {_} {:}])
Result \forall main, []
Solving (\forall Gen_Regexps.alphabeticRule, [[] | []+: * []])
Result \forall main, []
Solving (\forall Gen_Regexps.alphabeticRule, [[] | []+: * : | []+: * []])
Result \forall main, []
Solving (\forall Gen_Regexps.alphabeticRule, [[] | []+: * : | []+: * []])
Result \forall main, []
Solving (\forall Gen_Regexps.alphabeticRule, [[] | []+: * []])
Result \forall main, []
Solving (\forall Gen_Regexps.alphabeticRule, [[] | []+: * :])
Result \forall main, []
Solving (\forall Gen_Regexps.alphabeticRule, [:])
Result \forall main, []
Solving (\forall Gen_Regexps.constantRule, [:])
Result \forall main, [_]
Solving (\forall Prelude.head, [:])
Result \forall main, []
Final: \forall main, []
 
TEST: Gen_Regexps_Safe 
Solving (\forall Gen_Regexps_Safe.constantRule, [:])
Result \forall main, [_]
Final: \forall main, [_]
 
TEST: Integrate 
Solving (\forall Prelude.head, [:])
Result \forall main, [_]
Solving (\forall Prelude.tail, [:])
Result \forall main, [_]
Solving (\forall Primitive.divZero, [#2 {_} {Neg+One+Pos}])
Result \forall main, [_]
Final: \forall main, [_]
 
TEST: Primes 
Solving (\forall Prelude.!!, [#2 {:} {_}])
Result \forall main, [_]
Solving (\forall Prelude.!!.1, [#3 {False} {_} {_}])
Result \forall main, [Zero+One+Pos]
Solving (\forall Prelude.Prelude.Prelude.881.walk, [#2 {:} {_}])
Result \forall main, [_]
Solving (\forall Prelude.head, [:])
Result \forall main, [_]
Solving (\forall Primes.the_filter, [:])
Result \forall main, [_]
Solving (\forall Primitive.divZero, [#2 {_} {Neg+One+Pos}])
Result \forall main, [_]
Final: \forall main, [Zero+One+Pos]
 
TEST: Queens 
No pattern match errors, trivially safe
Final: \forall main, [_]
 
TEST: Rfib 
No pattern match errors, trivially safe
Final: \forall main, [_]
 
TEST: Tak 
No pattern match errors, trivially safe
Final: \forall main, [_]
 
TEST: X2n1 
Solving (\forall Data.Ratio.reduce_1.1, [#4 {_} {False} {_} {_}])
Result \forall main, [_]
Solving (\forall Prelude.gcd_1, [#2 {_} {Neg+One+Pos} | #2 {Neg+One+Pos} {_}])
Result \forall main, [_]
Solving (\forall Primitive.divZero, [#2 {_} {Neg+One+Pos}])
Result \forall main, [_]
Final: \forall main, [_]
 
