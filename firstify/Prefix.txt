-- HAND WRITTEN AS PREFIX.TXT

import System.IO
import Foreign
import Data.Char

main :: IO ()
main = fmain `seq` return ()

prim_System_IO_hPutChar x y = unsafePerformIO (System.IO.hPutChar x (chr y) >> return (CPrimitive_46IO C_40_41))

prim_Prelude_error = prim_error
prim_error = error . fromString

prim_System_IO_stdout = System.IO.stdout

prim_LT_W x y = (x::Int) <  y
prim_GT_W x y = (x::Int) >  y
prim_EQ_W x y = (x::Int) == y
prim_NE_W x y = (x::Int) /= y
prim_QUOT x y = quot x y :: Int
prim_REM x y = rem x y :: Int
prim_ADD_W x y = x + y :: Int
prim_SUB_W x y = x - y :: Int
prim_NEG_W x = negate x :: Int

prim_YHC_Primitive_primIntSignum = prim_Primitive_primIntSignum
prim_Primitive_primIntSignum x = signum x :: Int


prim_CHR x = ord x
prim_STRING x = map prim_CHR x

fromString x = map chr x

instance Show (DPrimitive_46IO a) where
	show (CPrimitive_46IO a) = a `seq` ""


-- END HAND WRITTEN
