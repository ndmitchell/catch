v
	verbose
?
	help
h
	help

help Show this help list
verbose Show the Hite at each step
version Show version information

hill-make
	core-make
	core-load
	overlay-apply
	core-hill
	hill-reachable
	hill-remove-dict
	hill-reachable
	hill-short-name
	hill-reachable
	hill-save

hill1
	hill-reachable
	hill-short-name
	hill-simplify
	hill-simple-inline
	hill-reachable
	hill-normalise

hill2
	hill-arity-raise
	hill-simplify
	hill-simple-inline
	hill-reachable
	hill-arity-callers
	hill-reachable

hill3
	hill-vector
	hill-defunc
	hill-no-string
	hill-special
	hill-simplify
	hill-simple-inline
	hill-reachable
	hill-reach-defunc

hill4
	hill-simplify
	hill-reachable
	hill-inline1
	hill-reachable
	hill-var-rejoin
	hill-simplify
	hill-add-let
	hill-top-let
	hill-nub-let
	hill-let-inline-simp
	hill-let-inline1
	hill-simplify
	hill-let-inline1

hill5
	hill-fusion
	hill4

hill
	hill1
	hill2
	hill3
	hill4


hill-performance
	hill5

hill-analyse
	hill1
	hill2
	hill3
	hill-anal4

hill-anal4
	hill-simplify
	hill-reachable
	hill-reachable
	hill-var-rejoin
	hill-simplify
	hill-add-let
	hill-top-let
	hill-nub-let
	hill-let-inline-simp
	hill-let-inline1
	hill-simplify
	hill-let-inline


prep
	hill-make
	hill-analyse
	hill-save

anal
	hill-load
	tram-patterns


compilepre
	short-name
	reachable
	add-primitive
	case-expand
	error-call
	reachable
	string-expand
	transform2
	reachable

trans2
	short-name
	reachable
	add-primitive
	case-expand
	error-call
	reachable
	string-expand
	transform2
	del-primitive
	reachable

trans3
	short-name
	reachable
	add-primitive
	case-expand
	error-call
	reachable
	string-expand
	transform3
	reachable
	ctor-collapse2
	case-saturate
	del-primitive
	reachable
	mcase

compile
	compilepre
	backend


trans
	short-name
	reachable
	add-primitive
	case-expand
	error-call
	reachable
	string-expand
	transform
	reachable
	ctor-collapse
	del-primitive
	reachable
	mcase

train2
	trans
	train-patterns

train3
	trans3
	train-patterns

prep
	short-name
	reachable
	case-lift
	arity-raise
	case-expand
	consts
	reachable
	make-move
	inline
	make-move
	reachable

prepare Prepare a Hite program from analysis
	prep
	defunc
	mcase

case *Try to prove a program is free from pattern match errors
	prepare
	safe-patterns

tprep
	prepare
	error-call
	string-expand
	reachable

tprep2
	short-name
	reachable
	dedict
	make-move
	defunc2

tpreptodo
	case-lift
	arity-raise
	case-expand
	consts
	reachable
	make-move
	inline
	make-move
	reachable
	defunc
	mcase
	error-call
	string-expand
	reachable

train *Pattern match detection, designed on a train
	tprep
	train-patterns

ncase *Find the circumstances under which a program will definately crash
	prepare
	unsafe-patterns

graph *Solve the program with graph methods
	prepare
	graph-patterns

subst *Solve the program with substitution methods
	prepare
	subst-patterns

typey *Solve the program with subtype analysis
	prep
	mcase
	onecall
	typey-patterns
	
typeyhop
	short-name
	reachable
	case-expand
	make-move
	const-lift
	error-call
	reachable
	mcase
	arg-elim
	reachable

typeyho *Use higher order subtype analysis
	typeyhop
	typeyho-patterns


abstractp
	short-name
	reachable
	case-expand
	make-move
	const-lift
	error-call
	string-expand
	ctor-collapse
	reachable

abstract *Use abstract evaluation
	abstractp
	abstract-patterns

stats *Generate statistics about a Haskell program
	short-name
	reachable
	error-fail
	reachable
	statistics
